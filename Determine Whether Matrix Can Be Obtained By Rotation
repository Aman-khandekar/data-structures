/////   Given two n x n binary matrices mat and target, return true if it is possible to make mat equal to target by rotating mat in 90-degree increments,
        or false otherwise. //////
   
   
   -----------------------------------------------------------------------------------------
        class Solution {
    public boolean findRotation(int[][] mat, int[][] target) {
        
        for(int i=0; i<4; i++){
            mat=transpose(mat);
          if (checkmatrix(mat,target)) return true;
        }
        return false;
    }
        int[][] transpose(int [][] mat){
          for (int i=0; i<mat.length; i++){
              for (int j=i; j<mat.length; j++){
             
                  if (i!=j){
                  int temp=mat[i][j];
                      mat[i][j]=mat[j][i];
                      mat[j][i]=temp;
                  }
               }
          } 
              for (int i=0; i<mat.length;i++){
                  int left=0;
                 int right=mat.length-1;
                  while(left<right){
                      int tem=mat[i][left];
                      mat[i][left]=mat[i][right];
                      mat[i][right]=tem;
                      left++;
                      right--;
                  }
              }
              
            
          return mat;
         }
    
        boolean checkmatrix(int[][]matrix,int[][] target){
        for (int i=0; i<matrix.length; i++){
            for (int j=0; j<matrix[i].length; j++){
                if (matrix[i][j]!=target[i][j]) return false;
               } 
            } 
            return true;
        }
}     
         
      
    
